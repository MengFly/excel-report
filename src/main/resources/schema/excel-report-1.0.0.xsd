<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://mengfly.github.io/excel-report/1.0.0"
           targetNamespace="http://mengfly.github.io/excel-report/1.0.0"
           elementFormDefault="qualified">
    <xs:element name="template" type="Template">
        <xs:annotation>
            <xs:documentation source="description">

                Excel 报表模板的根节点，一个模板包含一个Sheet页。
                改模板可以通过 include 标签被其他模板引用，也可使用 include 标签包含其他模板。

            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="Template">
        <xs:all>
            <xs:element minOccurs="0" name="parameters">
                <xs:annotation>
                    <xs:documentation source="description">模板参数</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="parameter" maxOccurs="unbounded" type="Parameter"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element minOccurs="0" name="sheetStyle" type="SheetStyle">
                <xs:annotation>
                    <xs:documentation source="description">
                        Sheet样式, 该样式会被应用到当前模板的Sheet页面上
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

            <xs:element minOccurs="0" name="styles">
                <xs:annotation>
                    <xs:documentation source="description">
                        定义样式列表，改样式可以通过Id被Container引用
                    </xs:documentation>
                </xs:annotation>

                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="style" maxOccurs="unbounded" type="Style"/>

                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <xs:element name="container" type="Container">
                <xs:annotation>
                    <xs:documentation source="description">
                        模板页面数据，
                        该数据会被解析成Excel表格，并生成相应的Excel Sheet页面
                        需要注意，该节点下只能包含一个Container元素
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>

        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">模板名称</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="version" type="xs:string" default="1.0.0">
            <xs:annotation>
                <xs:documentation source="description">模板版本号</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="description" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">模板描述</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="author" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">模板作者</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="createAt" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">模板日期</xs:documentation>
            </xs:annotation>
        </xs:attribute>

    </xs:complexType>

    <xs:complexType name="Parameter">
        <xs:attribute name="id" type="xs:ID" use="required">
            <xs:annotation>
                <xs:documentation source="description">参数ID</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">参数名称</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="type" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">参数类型</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="description" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">参数描述</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="required" type="xs:boolean" default="true">
            <xs:annotation>
                <xs:documentation source="description">是否必须</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="Container">
        <xs:annotation>
            <xs:documentation source="description">
                容器，只能包含
                一个Container元素对应一个Sheet页
                一个Sheet页包含多个Row行
                一个Row行包含多个Cell单元格
            </xs:documentation>
        </xs:annotation>
        <xs:group ref="ContainerGroupContainer"/>
    </xs:complexType>

    <xs:complexType name="SheetStyle">
        <xs:all>
            <xs:element minOccurs="0" name="displayGuts" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        是否在单元格中显示其属性和样式。
                        当设置 displayGuts 为 true 时。
                        在打印或预览 Sheet 时，会在单元格中显示其属性和样式。
                        例如单元格的合并范围、背景颜色、字体样式等信息。这有助于在设计和调试 Sheet 时进行检查和调整。
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="displayZeros" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在单元格中显示零值
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="rowSumsBelow" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在下方显示行的总和
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="rowSumsRight" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在下方显示行的总和
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="displayGridlines" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在打印或预览 Sheet 时显示网格线
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="printGridlines" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在打印时显示网格线
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="printRowAndColumnHeadings" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在打印时显示行和列的标题
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="autobreaks" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在打印时自动插入页面折页
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="forceFormulaRecalculation" type="xs:integer">
                <xs:annotation>
                    <xs:documentation source="description">

                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="defaultColumnWidth" type="xs:integer">
                <xs:annotation>
                    <xs:documentation source="description">
                        默认列宽度
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="defaultRowHeight" type="xs:float">
                <xs:annotation>
                    <xs:documentation source="description">
                        默认行高度
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="displayRowColHeadings" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在打印或预览 Sheet 时显示行和列的标题。
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="displayFormulas" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于控制是否在打印或预览 Sheet 时显示单元格的公式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fitToPage" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        属性为 true 时，在打印时，系统会自动调整 Sheet 的大小以适应一页，并显示网格线和标题
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="horizontallyCenter" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        是否在打印时水平居中显示 Sheet。
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="verticallyCenter" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        是否在打印时垂直居中显示 Sheet。
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="zoom" type="xs:integer" default="100">
                <xs:annotation>
                    <xs:documentation source="description">
                        用于设置打印或预览 Sheet 时的缩放比例。默认情况下，zoom 属性值为 100%，表示不缩放
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="tabColor" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        Sheet Tab 颜色
                        颜色可以是描述符，如white,black,red,green,blue,yellow,cyan等
                        也可以是十六进制颜色代码，如#FF0000，表示红色
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="committed" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation source="description">

                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="margin" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        margin
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="marginLeft" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        marginLeft
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="marginRight" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        marginRight
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="marginTop" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        marginTop
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="marginBottom" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        marginBottom
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="marginHeader" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        marginHeader
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="marginFooter" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        marginFooter
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="password" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        Sheet页保护密码
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
    </xs:complexType>

    <xs:complexType name="Style">
        <xs:annotation>
            <xs:documentation source="description">
                样式信息
            </xs:documentation>
        </xs:annotation>

        <xs:all>
            <xs:element minOccurs="0" name="borderTop" type="BorderStyle">
                <xs:annotation>
                    <xs:documentation source="description">
                        上边框样式
                    </xs:documentation>
                </xs:annotation>

            </xs:element>
            <xs:element minOccurs="0" name="borderBottom" type="BorderStyle">
                <xs:annotation>
                    <xs:documentation source="description">
                        下边框样式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="borderLeft" type="BorderStyle">
                <xs:annotation>
                    <xs:documentation source="description">
                        左边框样式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="borderRight" type="BorderStyle">
                <xs:annotation>
                    <xs:documentation source="description">
                        右边框样式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="topBorderColor" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        上边框颜色
                        颜色可以是描述符，如white,black,red,green,blue,yellow,cyan等
                        也可以是十六进制颜色代码，如#FF0000，表示红色
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="bottomBorderColor" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        下边框颜色
                        颜色可以是描述符，如white,black,red,green,blue,yellow,cyan等
                        也可以是十六进制颜色代码，如#FF0000，表示红色
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="leftBorderColor" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        左边框颜色
                        颜色可以是描述符，如white,black,red,green,blue,yellow,cyan等
                        也可以是十六进制颜色代码，如#FF0000，表示红色
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="rightBorderColor" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        右边框颜色
                        颜色可以是描述符，如white,black,red,green,blue,yellow,cyan等
                        也可以是十六进制颜色代码，如#FF0000，表示红色
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="hidden" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        是否隐藏
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="locked" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation source="description">
                        是否锁定
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="alignHorizontal" type="HorizontalAlignment">
                <xs:annotation>
                    <xs:documentation source="description">
                        水平居中样式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="alignVertical" type="VerticalAlignment">
                <xs:annotation>
                    <xs:documentation source="description">
                        垂直居中样式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="wrapText" type="xs:boolean" default="false">
                <xs:annotation>
                    <xs:documentation source="description">
                        是否自动换行
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="rotation">
                <xs:annotation>
                    <xs:documentation source="description">
                        旋转角度（0-180）
                    </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:short">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="180"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="indention" type="xs:short">
                <xs:annotation>
                    <xs:documentation source="description">
                        设置缩进单元格中文本的空格数
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fillPattern" type="FillPatternType">
                <xs:annotation>
                    <xs:documentation source="description">
                        颜色填充模式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fillForegroundColor" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        填充颜色
                        颜色可以是描述符，如white,black,red,green,blue,yellow,cyan等
                        也可以是十六进制颜色代码，如#FF0000，表示红色
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="readingOrder" type="ReadingOrder">
                <xs:annotation>
                    <xs:documentation source="description">
                        阅读方向
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="dataFormat" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        数据格式, 参考Excel单元格格式中数字类型格式
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="shrinkToFit" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation source="description">
                        shrinkToFit
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="width" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        单元格宽度
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="height" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        单元格宽度
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontName" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        字体名称
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontHeight" type="xs:double">
                <xs:annotation>
                    <xs:documentation source="description">
                        字体大小
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontItalic" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation source="description">
                        字体是否斜体
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontStrikeout" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation source="description">
                        字体是否删除线
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontColor" type="xs:string">
                <xs:annotation>
                    <xs:documentation source="description">
                        字体颜色
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontUnderline" type="FontUnderline">
                <xs:annotation>
                    <xs:documentation source="description">
                        字体下划线类型
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontBold" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation source="description">
                        是否加粗
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="fontFamily" type="FontFamily">
                <xs:annotation>
                    <xs:documentation source="description">
                        fontFamily
                    </xs:documentation>
                </xs:annotation>
            </xs:element>

        </xs:all>

        <xs:attribute name="id" use="required" type="xs:ID">
            <xs:annotation>
                <xs:documentation source="description">
                    样式ID,样式组不可重复
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

    </xs:complexType>

    <xs:simpleType name="BorderStyle">
        <xs:annotation>
            <xs:documentation source="description">
                边框类型
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="thin"/>
            <xs:enumeration value="medium"/>
            <xs:enumeration value="dashed"/>
            <xs:enumeration value="dotted"/>
            <xs:enumeration value="thick"/>
            <xs:enumeration value="double"/>
            <xs:enumeration value="hair"/>
            <xs:enumeration value="medium_dashed"/>
            <xs:enumeration value="dash_dot"/>
            <xs:enumeration value="medium_dash_dot"/>
            <xs:enumeration value="dash_dot_dot"/>
            <xs:enumeration value="medium_dash_dot_dot"/>
            <xs:enumeration value="slanted_dash_dot"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="HorizontalAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="left"/>
            <xs:enumeration value="center"/>
            <xs:enumeration value="right"/>
            <xs:enumeration value="fill"/>
            <xs:enumeration value="justify"/>
            <xs:enumeration value="center_selection"/>
            <xs:enumeration value="distributed"/>
        </xs:restriction>

    </xs:simpleType>
    <xs:simpleType name="VerticalAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="top"/>
            <xs:enumeration value="center"/>
            <xs:enumeration value="bottom"/>
            <xs:enumeration value="justify"/>
            <xs:enumeration value="distributed"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FillPatternType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="no_fill"/>
            <xs:enumeration value="solid_foreground"/>
            <xs:enumeration value="fine_dots"/>
            <xs:enumeration value="alt_bars"/>
            <xs:enumeration value="sparse_dots"/>
            <xs:enumeration value="thick_horz_bands"/>
            <xs:enumeration value="thick_vert_bands"/>
            <xs:enumeration value="thick_backward_diag"/>
            <xs:enumeration value="thick_forward_diag"/>
            <xs:enumeration value="big_spots"/>
            <xs:enumeration value="bricks"/>
            <xs:enumeration value="thin_horz_bands"/>
            <xs:enumeration value="thin_vert_bands"/>
            <xs:enumeration value="thin_backward_diag"/>
            <xs:enumeration value="thin_forward_diag"/>
            <xs:enumeration value="squares"/>
            <xs:enumeration value="diamonds"/>
            <xs:enumeration value="less_dots"/>
            <xs:enumeration value="least_dots"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ReadingOrder">
        <xs:restriction base="xs:string">
            <xs:enumeration value="context"/>
            <xs:enumeration value="left_to_right"/>
            <xs:enumeration value="right_to_left"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FontUnderline">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="single"/>
            <xs:enumeration value="double"/>
            <xs:enumeration value="single_accounting"/>
            <xs:enumeration value="double_accounting"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="FontFamily">
        <xs:annotation>
            <xs:documentation source="description">
                字体家族
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="not_applicable"/>
            <xs:enumeration value="roman"/>
            <xs:enumeration value="swiss"/>
            <xs:enumeration value="modern"/>
            <xs:enumeration value="script"/>
            <xs:enumeration value="decorative"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="AlignPolicy">
        <xs:restriction base="xs:string">
            <xs:enumeration value="start"/>
            <xs:enumeration value="center"/>
            <xs:enumeration value="end"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="Orientation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="horizontal"/>
            <xs:enumeration value="vertical"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:group name="ContainerGroupContainer">

        <xs:choice>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="VLayout" type="VLayout"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="HLayout" type="HLayout"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Text" type="Text"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Table" type="Table"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Image" type="Image"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="List" type="List"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Span" type="Span"/>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Link" type="Link"/>
        </xs:choice>

    </xs:group>

    <xs:group name="LayoutGroupContainer">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element minOccurs="0" maxOccurs="unbounded" name="VLayout" type="VLayout"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="HLayout" type="HLayout"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="Text" type="Text"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="Table" type="Table"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="Image" type="Image"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="List" type="List"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="Span" type="Span"/>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="Link" type="Link"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <!--  Containers  -->

    <xs:complexType name="VLayout">
        <xs:annotation>
            <xs:documentation source="description">
                垂直布局组件
            </xs:documentation>
        </xs:annotation>
        <xs:group ref="LayoutGroupContainer"/>
        <xs:attribute name="alignPolicy" type="AlignPolicy"/>
        <xs:attributeGroup ref="AttrContainerDefault"/>
        <xs:attributeGroup ref="AttrLayoutDefault"/>
    </xs:complexType>
    <xs:complexType name="HLayout">
        <xs:annotation>
            <xs:documentation source="description">
                水平布局组件
            </xs:documentation>
        </xs:annotation>
        <xs:group ref="LayoutGroupContainer"/>
        <xs:attribute name="alignPolicy" type="AlignPolicy"/>
        <xs:attributeGroup ref="AttrContainerDefault"/>
        <xs:attributeGroup ref="AttrLayoutDefault"/>
    </xs:complexType>
    <xs:complexType name="Text">
        <xs:annotation>
            <xs:documentation source="description">
                文本组件
            </xs:documentation>
        </xs:annotation>

        <xs:attributeGroup ref="AttrSize"/>
        <xs:attributeGroup ref="AttrContainerDefault"/>

        <xs:attribute name="text" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    Text的文本信息
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="Link">
        <xs:annotation>
            <xs:documentation source="description">
                超链接组件
            </xs:documentation>
        </xs:annotation>

        <xs:attributeGroup ref="AttrSize"/>
        <xs:attributeGroup ref="AttrContainerDefault"/>

        <xs:attribute name="text" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    Cell的文本信息
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="link" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    超链接地址
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="label" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    超链接显示的文本
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="Table">
        <xs:annotation>
            <xs:documentation source="description">
                表格组件
            </xs:documentation>
        </xs:annotation>
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="column" type="TableColumn"/>
        </xs:sequence>

        <xs:attributeGroup ref="AttrContainerDefault"/>
        <xs:attribute name="dataList" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    表格数据
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="headerVisible" default="true" type="xs:boolean">
            <xs:annotation>
                <xs:documentation source="description">
                    是否显示表头
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

    </xs:complexType>
    <xs:complexType name="TableColumn">
        <xs:attribute name="id" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    列ID,对应如何从数据对象中取值，如果是java对象，那么为属性名，如果是map那么为key
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    列名称
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="style" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    Table Header 数据样式
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="dataStyle" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    列数据样式
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="columnSpan" type="xs:integer" default="1">
            <xs:annotation>
                <xs:documentation source="description">
                    该数据列占有的Excel列数
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="Image">
        <xs:annotation>
            <xs:documentation source="description">
                图片组件
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="src" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    图片路径/输入输出流/base64/Image...
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attributeGroup ref="AttrContainerDefault"/>
        <xs:attributeGroup ref="AttrSize"/>
    </xs:complexType>
    <xs:complexType name="List">
        <xs:annotation>
            <xs:documentation source="description">
                横向/纵向 列表组件
            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="span" type="xs:int">
            <xs:annotation>
                <xs:documentation source="description">
                    列表占据的列数/行数
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="dataList" type="xs:string" use="required">
            <xs:annotation>
                <xs:documentation source="description">
                    列表数据
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="orientation" type="Orientation">
            <xs:annotation>
                <xs:documentation source="description">
                    列表数据对齐方式
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attribute name="title" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    列表title
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>

        <xs:attributeGroup ref="AttrContainerDefault"/>
    </xs:complexType>
    <xs:complexType name="Span">
        <xs:annotation>
            <xs:documentation source="description">
                合并单元格组件
            </xs:documentation>
        </xs:annotation>
        <xs:attributeGroup ref="AttrSize"/>
    </xs:complexType>
    <xs:attributeGroup name="AttrContainerDefault">
        <xs:attribute name="id" type="xs:ID">
            <xs:annotation>
                <xs:documentation source="description">
                    组件ID，可以不设置，该组件Id将会作为该组件的唯一标识，主要用于组件之间相互引用的场景，不设置不影响使用
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="style" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    样式信息，可以为样式ID，也可以为样式内容
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="if" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    条件表达式，如果为true，则显示该组件，否则不显示
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="AttrLayoutDefault">
        <xs:attribute name="for" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    For 循环对应的变量表达式
                    如果变量数据为 List 类型：
                    如 ${data : dataList} 或 ${data, index : dataList}

                    如果变量类型为map类型：
                    如 ${karg, varg : dataMap}
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="AttrSize">
        <xs:attribute name="size" type="xs:string">
            <xs:annotation>
                <xs:documentation source="description">
                    所占Cell个数，以逗号隔开，如 3,4
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

</xs:schema>